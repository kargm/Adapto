(in-package :ad-exe)

(defun store-pose (target-pose source-pose stamp)
  (setf (tf:x (tf:origin target-pose))
        (geometry_msgs-msg:x (geometry_msgs-msg:position source-pose)))
  (setf (tf:y (tf:origin target-pose))
        (geometry_msgs-msg:y (geometry_msgs-msg:position source-pose)))
  (setf (tf:z (tf:origin target-pose))
        (geometry_msgs-msg:z (geometry_msgs-msg:position source-pose)))
  (setf (tf:x (tf:orientation target-pose))
        (geometry_msgs-msg:x (geometry_msgs-msg:orientation source-pose)))
  (setf (tf:y (tf:orientation target-pose))
        (geometry_msgs-msg:y (geometry_msgs-msg:orientation source-pose)))
  (setf (tf:z (tf:orientation target-pose))
        (geometry_msgs-msg:z (geometry_msgs-msg:orientation source-pose)))
  (setf (tf:w (tf:orientation target-pose))
        (geometry_msgs-msg:w (geometry_msgs-msg:orientation source-pose)))
  (setf (tf:stamp target-pose) stamp))

(defun store-position-data (data)
  (store-pose (pose (value (getgv :robot 'jido)))
              (geometry_msgs-msg:pose (nav_msgs-msg:pose data))
              (std_msgs-msg:stamp (nav_msgs-msg:header data))))

(defun store-human-position-data (data)
  (store-pose (pose (value (getgv :human 'louis)))
              (geometry_msgs-msg:pose data)
              (std_msgs-msg:stamp (geometry_msgs-msg:header data))))



;;; Objekte:
;;; - am Anfang einmal Ground Truth topic abhören (dann unsubscriben), dabei statevars für Objekte erzeugen
;;; - dann Topic mit kamera-gefilterten Daten zum Update verwenden

(let ( (topics `(("/Jido/Pose_sensor" "nav_msgs/Odometry" ,#'store-position-data)
                 ("/Human/Pose" "geometry_msgs/PoseStamped" ,#'store-human-position-data)))
       (subscribers '()) )
  (defun start-statevar-update ()
    (dolist (top topics)
      (push (apply #'roslisp:subscribe top) subscribers))
    (sleep 2))

  (defun stop-statevar-update ()
    (when subscribers
      (roslisp:unsubscribe (pop subscribers))
      (stop-statevar-update)))

)

;(setf (gethash 'start-adapto-statevar-update cram-roslisp-common::*ros-init-functions*)
;      #'start-statevar-update)
